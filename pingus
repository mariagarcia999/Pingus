El servidor es una clase que se encarga de controlar el juego, lleva la cuenta de las posiciones de los bots,
el orden de llegada a la meta y decide si puede avanzar o no. Los bots realmente le preguntan al servidor si 
pueden avanzar, este decide y les contesta. Aquí vemos representado un sistema distribuido centralizado. He 
añadido una simulación de retardo para que no avancen justo al recibir el mensaje, me he basado en las redes 
Internet(no es todo inmediato).
En esta clase implementamos los tres temas principales, el sistema distribuido, la asincronía usando candados 
para evitar problemas entre hilos que corren a la vez. La asincronía consiste en que cada tarea no ha de 
esperar a las demás para ejecutarse, avanzan independientemente sin afectar al resto. Y el paso de mensajes, 
viene de forma implícita pero realmente cada pingu tiene que pedir permiso al servidor para avanzar. Es una 
manera de comunicarse entre componentes, uno le envía información al otro sin necesidad de  modificar los 
datos.
Introducir colisiones: si dos agentes reciben permiso muy seguidos, uno "resbala" y pierde turno. Sistema 
multiagente con la mosquita, o un plátano
La clase bot representa a cada uno de los pingus heredando de threading.Thread, lo que implica que cada pingu 
se ejecuta en su hilo personal y corren todos en paralelo kindof. Cuando lo lanzamos(start) nuestros pingus 
entran en un bucle donde han de esperar, piden permiso para avanzar al server. Aquí volvemos a ver la 
asincronía(no esperan a que otro termine), el paso de mensajes y los sistemas distribuidos(los bots son 
autónomos pero aún así trabajan junto al server).
Asynco. Ahora cada bot es una tarea asíncrona que se ejecuta dentro de un solo hilo mientras que usa el 
bucle de eventos de la librería, Lo ejecutamos todo de manera cooperativa sin hilos de verdad lol. La clase 
agente creo que representa el paso de mensajes, la asincronía(el control va cambiando sin afectar a los demás), 
y los sistemas distribuidos(independientes pero con coordinación de fuera). El servidor es el que decide qué 
agente puede moverse y se comunica con los agentes mediante el paso de los mensajes. 
El main crea a los agentes, crea también la cola asincróna para los agentes(básicamente donde le llegan los 
mensajes) y lanza las tareas, una para cada agente con el run_agent y otra para el server. las ejecuta al 
mismo tiempo. 
